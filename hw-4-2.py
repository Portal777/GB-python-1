# Представлен список чисел. Необходимо вывести элементы исходного списка, значения которых больше предыдущего элемента.
# Подсказка: элементы, удовлетворяющие условию, оформить в виде списка. Для формирования списка использовать генератор.
# Пример исходного списка: [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55].
# Результат: [12, 44, 4, 10, 78, 123].
# ИЛИ [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 12, 55]. - ЧТОБЫ ИСКЛЮЧИТЬ ЛОВУШКУ С ИНДЕКСАМИ СПИСКА
# Результат: [12, 44, 4, 10, 78, 55].


# a = [1, 22 , 23 , 22]
# a[a.index(23)-1] -> 22
# list.index(x, start, end)

# РАБОЧИЙ ВАРИАНТ, ЗА ИСКЛЮЧЕНИЕМ ПОДВОХА С ИНДЕКСАМИ СПИСКА
# если "123" заменить на "12", то f_lst.index(12), будет показывать индекс первого числа "12" в списке, который = 2
# f_lst = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 12, 55]
#
# s_lst = [i for i in f_lst if f_lst.index(i) != 0 and i > f_lst[f_lst.index(i)-1]]  # так работает
#
# # s_lst = [i for i in f_lst if f_lst.index(i) != 0 and i > f_lst[f_lst.index(i, i)-1]]  # так уже нет
#
# s_lst_index = [f_lst.index(i) for i in f_lst if f_lst.index(i) != 0 and i > f_lst[f_lst.index(i)-1]]
#
# print(s_lst)
# print(f'Индексы: {s_lst_index}')

# РАБОЧИЙ ВАРИАНТ
# в чате кто-то написал про enumerate, пришлось попробовать :)
# Что выводит [i for i in enumerate(f_lst)]
# -> [(0, 300), (1, 2), (2, 12), (3, 44), (4, 1), (5, 1), (6, 4), (7, 10), (8, 7), (9, 1), (10, 78), (11, 12), (12, 55)]

f_lst = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 12, 55]

print([i[1] for i in enumerate(f_lst) if i[0] != 0 and i[1] > f_lst[i[0]-1]])

print(f'Индексы: {[i[0] for i in enumerate(f_lst) if i[0] != 0 and i[1] > f_lst[i[0]-1]]}')


# Не работает из-за последнего условия
# import random
#
# s_lst = [i for i in enumerate(random.randint(0, 301) for p in range(0, 14)) if i[0] != 0 and i[1] > i[1][1]]
#
# print(s_lst)

# Время потраченное на весь этот шедевр составляет порядка 6 часов!
